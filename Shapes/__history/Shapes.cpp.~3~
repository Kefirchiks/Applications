#pragma hdrstop
#pragma argsused

#include <tchar.h>
#include <stdio.h>
#include <stdlib.h>
#include <vcl.h>
#include <conio.h>
#include <iostream.h>

class Shape {
	protected:
		int dimension;
	public:
// Iekšējā metode stipendijas aprēķināšanai
	inline void setDimension(Shape *A)
		{
			cout << "Ievadiet dimension: ";
			cin >> dimension;
		}
// Pārslogota funkcija
	void setDimension()
		{
			cout << "Ievadiet dimension: ";
			cin >> dimension;
		}
	int getDimension(Shape* A)
	{
		system("CLS");
		cout << "Dimension = " << dimension << endl;
		return EXIT_SUCCESS;
	}
	virtual void getArea()
	{
	int laukums;
		laukums = (dimension * dimension);
		cout << "Laukums = " << laukums << endl;
	}

};
class CRec : protected Shape
	{
	private:
		int dimension2;
	public:
	friend class Shape;
	void printMala()
	{
	cout << "Mala ir = " << dimension;
	}
};
int main()
{
Shape myShape; // Izveido objektu

Shape *dimension; // Norāde uz 'protected' dimension
	myShape.setDimension(dimension);
	myShape.getDimension(dimension);
	myShape.getArea();

	CRec myRec;
	myRec.printMala();

	getch();
return EXIT_SUCCESS;
}
